In an undirected graph, (i, j) means that node i and node j are connected with an undirected edge. Please implement Depth-First Search (DFS) on an undirected graph as follows:
You should maintain the current node x and the previous node y. Start from any unvisited node. In every turn, check whether you can move from node x to node z. You can move to z if the following conditions hold:
1. Node  x  and node  z  are connected (i.e., there is an edge between them).
2. Node  z  is not equal to  y  (the previous node).
3. Node  z  is not equal to  x  (the current node).
If you can move to node z, perform the DFS into z, and update the previous node to x. If there are no nodes to move to, backtrack by "popping the stack" and updating the current node and previous node accordingly.
If you detect that a node appears in the stack more than once, this indicates a cycle, and you should output "the answer is yes" and stop the search. If no cycle is detected and the DFS finishes successfully, output "the answer is no".